<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="doself.admin.declare.mapper.DeclareMapper">
    	
    	<resultMap type="Declare" id="declareResultMap">
  			<id column="rr_num" property="rrNum" />
  			<result column="mbr_id" property="mbrId" />  		
  			<result column="olc_code" property="olcCode" />
  			<result column="rr_bc_num" property="rrBcNum" />
  			<result column="rc_code" property="rcCode" />
  			<result column="rr_content" property="rrContent" />
  			<result column="rr_date" property="rrDate" />
  			<result column="sc_code" property="scCode" />
  			<result column="rr_admin" property="rrAdmin" />
  			<result column="rr_processing_period" property="rrProcessingPeriod" />
  			<result column="rr_reason_content" property="rrReasonContent" />
  			
  			<!-- 멤버 관계 -->
	  		<association property="memberInfo" javaType="Member">
	  			<id 	column="mbr_id" property="mbrId" />	  			
	  			<result column="mbr_name" property="mbrName" />	  				  				  			  			  			
	  		</association>	
	  		
  			<!-- 관리자 관계 -->
	  		<association property="adminInfo" javaType="AdminInfo">
	  			<id 	column="admin.mbr_id" property="adminMbrId" />	  			
	  			<result column="adminMbrName" property="adminMbrName" />	  				  				  			  			  			
	  		</association>	
	  		
	  		<!-- 발생위치카테고리 관계 -->
	  		<association property="occuranceLocationInfo" javaType="OccuranceLocation">
	  			<id 	column="olc_code" property="olcCode" />	  			
	  			<result column="olc_name" property="olcName" />	  				  				  			  			  			
	  		</association> 
	  		
	  		<!-- 처리상태카테고리 관계 -->
	  		<association property="statusCategoryInfo" javaType="StatusCategory">
	  			<id 	column="sc_code" property="scCode" />	  			
	  			<result column="sc_status" property="scStatus" />	  				  				  			  			  			
	  		</association>
	  		   		  		  			 	   		
	  		<!-- 신고유형카테고리 관계 -->
	  		<association property="declareCategoryInfo" javaType="DeclareCategory">
	  			<id 	column="rc_code" property="rcCode" />	  			
	  			<result column="rc_name" property="rcName" />	  				  				  			  			  			
	  		</association>   		  		  			 	   		
  		</resultMap>
    	
  		<!-- 신고요청 접수 조회 -->
		<select id="getDeclareList" resultMap="declareResultMap">
			/* 신고요청 접수 조회 */
			
				SELECT
				rr_num,
				m.mbr_name,
				olc.olc_name,
				rr_bc_num,
				rc.rc_name,
				rr_content,
				rr_date,
				sc.sc_status,		
				admin.mbr_name AS adminMbrName,
				rr_processing_period,
				rr_reason_content
			FROM report_request rr INNER JOIN `member` m
				ON rr.mbr_id = m.mbr_id
				LEFT JOIN `member` admin
				ON admin.mbr_id = rr.rr_admin
				INNER JOIN occurance_location_code olc
				ON rr.olc_code = olc.olc_code
				INNER JOIN status_category sc
				ON rr.sc_code = sc.sc_code
				INNER JOIN report_category rc
				ON rr.rc_code = rc.rc_code
			<where>
				1=1
				<if test="searchType != null and searchKeyword != null and searchType != '' and searchKeyword != ''">
			        AND ${searchType} LIKE CONCAT('%', #{searchKeyword}, '%') 
			    </if>
			    <if test="startDate != null and startDate != ''">
			        AND rr_date > #{startDate}
			    </if>
			    <if test="endDate != null and endDate != ''">
			        AND rr_date <![CDATA[ < ]]> #{endDate}
			    </if>			
			</where>
			ORDER BY
				rr.rr_num
			LIMIT #{pageable.rowPerPage} OFFSET #{pageable.offset};
		</select>
		
		<!-- 페이징 -->
		<select id="getCntDeclareList" resultType="int">
			/* 멤버 총개수 */
			SELECT 
				count(*)
			FROM report_request rr INNER JOIN `member` m
				ON rr.mbr_id = m.mbr_id
				INNER JOIN occurance_location_code olc
				ON rr.olc_code = olc.olc_code
				INNER JOIN status_category sc
				ON rr.sc_code = sc.sc_code
				INNER JOIN report_category rc
				ON rr.rc_code = rc.rc_code
			<where>
				1=1
				<if test="searchType != null and searchKeyword != null and searchType != '' and searchKeyword != ''">
			        AND ${searchType} LIKE CONCAT('%', #{searchKeyword}, '%') 
			    </if>
			    <if test="startDate != null and startDate != ''">
			        AND rr_date > #{startDate}
			    </if>
			    <if test="endDate != null and endDate != ''">
			        AND rr_date <![CDATA[ < ]]> #{endDate}
			    </if>			
			</where>
			ORDER BY
				rr.rr_num   
		</select>
		
		
		
		<resultMap type="DeclareUser" id="declareUserResultMap">
  			<id column="rmm_num" property="rmmNum" />
  			<result column="rr_num" property="rrNum" />  		
  			<result column="mbr_id" property="mbrId" />
  			<result column="rc_code" property="rcCode" />
  			<result column="rmm_sanction_start_date" property="rmmSanctionStartDate" />
  			<result column="rmm_sanction_period" property="rmmSanctionPeriod" />
  			<result column="rmm_sanction_end_date" property="rmmSanctionEndDate" />
  			<result column="rmm_admin" property="rmmAdmin" />
  			
  			<!-- 멤버 관계 -->
	  		<association property="memberInfo" javaType="Member">
	  			<id 	column="mbr_id" property="mbrId" />	  			
	  			<result column="mbr_name" property="mbrName" />	  				  				  			  			  			
	  			<result column="mg_code" property="mgCode" />	  				  				  			  			  			
	  		</association>
	  		
	  		<!-- 관리자 관계 -->
	  		<association property="adminInfo" javaType="AdminInfo">
	  			<id 	column="admin.mbr_id" property="adminMbrId" />	  			
	  			<result column="adminMbrName" property="adminMbrName" />	  				  				  			  			  			
	  		</association>		
	  			  		   		  		  			 	   		
	  		<!-- 신고유형카테고리 관계 -->
	  		<association property="declareCategoryInfo" javaType="DeclareCategory">
	  			<id 	column="rc_code" property="rcCode" />	  			
	  			<result column="rc_name" property="rcName" />	  				  				  			  			  			
	  		</association>   		  		  			 	   		
  		</resultMap>
		
  		<!-- 부정회원 관리 조회 -->
		<select id="getDeclareUserList" resultMap="declareUserResultMap">
			/* 신고요청 접수 조회 */
			
			SELECT		
				rmm_num,
				rr_num,
				m.mbr_name,
				rc.rc_name,
				rmm_sanction_start_date,
				rmm_sanction_period,
				rmm_sanction_end_date,
				admin.mbr_name AS adminMbrName
			FROM report_member_management rmm INNER JOIN `member` m
				ON rmm.mbr_id = m.mbr_id
				LEFT JOIN `member` admin
				ON rmm.rmm_admin = admin.mbr_id
				INNER JOIN report_category rc
				ON rmm.rc_code = rc.rc_code
			<where>
				1=1
				<if test="searchType != null and searchKeyword != null and searchType != '' and searchKeyword != ''">
			        AND ${searchType} LIKE CONCAT('%', #{searchKeyword}, '%') 
			    </if>
			    <if test="startDate != null and startDate != ''">
			        AND rmm_sanction_end_date > #{startDate}
			    </if>
			    <if test="endDate != null and endDate != ''">
			        AND rmm_sanction_end_date <![CDATA[ < ]]> #{endDate}
			    </if>			
			</where>
		    ORDER BY
		    	rmm.rmm_num
		    LIMIT #{pageable.rowPerPage} OFFSET #{pageable.offset};
		</select>
		
		<!-- 페이징 -->
		<select id="getCntDeclareUserList" resultType="int">
			/* 멤버 총개수 */
			SELECT 
				count(*)
			FROM report_member_management rmm INNER JOIN `member` m
				ON rmm.mbr_id = m.mbr_id
				INNER JOIN report_category rc
				ON rmm.rc_code = rc.rc_code
			<where>
				1=1
				<if test="searchType != null and searchKeyword != null and searchType != '' and searchKeyword != ''">
			        AND ${searchType} LIKE CONCAT('%', #{searchKeyword}, '%') 
			    </if>
			    <if test="startDate != null and startDate != ''">
			        AND rmm_sanction_end_date > #{startDate}
			    </if>
			    <if test="endDate != null and endDate != ''">
			        AND rmm_sanction_end_date <![CDATA[ < ]]> #{endDate}
			    </if>			
			</where>
		    ORDER BY
		    	rmm.rmm_num  
		</select>
		
		<!-- 특정 신고요청 조회 -->
		<select id="getModifyDeclareByRrNum" resultMap="declareResultMap">
			SELECT 
				rr_num, 
				mbr_id, 
				olc_code, 
				rr_bc_num, 
				rc_code, 
				rr_content, 
				rr_date, 
				sc_code, 
				rr_admin, 
				rr_processing_period,
				rr_reason_content
			FROM report_request
			WHERE
				rr_num = #{rrNum}
		</select>
		<!-- 신고요청 반려 -->
  		<update id="modifyDeclare" parameterType="Declare">
  			UPDATE report_request
  			<trim prefix="SET" suffixOverrides=","> 	
  				rr_num = #{rrNum},		
				<if test="rrReasonContent != null and rrReasonContent != ''">
					rr_reason_content = #{rrReasonContent},
				</if>
				rr_processing_period = now(),
				sc_code = 'sc_002'				  			
  			</trim>
  			WHERE
  				rr_num = #{rrNum};
  		</update>
  		
  		<!-- 부정회원 추가 -->
  		<insert id="createDeclareUser">
  			INSERT INTO report_member_management (
  			rmm_num, 
  			rr_num, 
  			mbr_id, 
  			rc_code, 
  			rmm_sanction_start_date,
  			rmm_sanction_period, 
  			rmm_sanction_end_date, 
  			rmm_admin
  			) VALUES (
  			#{newKey}, 
  			#{declare.rrNum}, 
  			#{declare.mbrId}, 
  			#{declare.rcCode}, 
  			NOW(), 
  			${declarePeriod}, 
  			DATE_ADD(NOW(), INTERVAL ${declarePeriod} DAY), 
  			''
  			)
  		</insert>
  		
  		<!-- 신고유형별 제제기간 가져오기 -->
  		<select id="getDeclarePeriod" resultType="int">
  			SELECT 
  				rc_sanction_period
			FROM report_category
			WHERE
				rc_code = #{rcCode}
  		</select>
  		
  		<!-- 부정회원 추가후 처리상태 변경 -->
  		<update id="modifyScCode" parameterType="Declare">
  			UPDATE report_request
  			<trim prefix="SET" suffixOverrides=","> 	
  				rr_num = #{rrNum},						
				rr_processing_period = now(),
				sc_code = 'sc_003'				  			
  			</trim>
  			WHERE
  				rr_num = #{rrNum};
  		</update>
  		
  		<!-- 부정회원 추가후 회원등급 변경 -->
  		<update id="modifyMgCode" parameterType="Declare">
  			UPDATE `member`
  			<trim prefix="SET" suffixOverrides=","> 	
  				mbr_id = #{mbrId},									
				mg_code = 'mg_003'				  			
  			</trim>
  			WHERE
  				mbr_id = #{mbrId};
  		</update>
  		
  		<!-- 제제기간 지난 유저리스트 가져오기 -->
  		<select id="getSanctionEndList" resultMap="declareUserResultMap">
  			WITH RankedRecords AS (
			    SELECT 
			        rmm.rmm_num,
			        rmm.rr_num,
			        rmm.mbr_id,
			        rmm.rc_code,
			        rmm.rmm_sanction_start_date,
			        rmm.rmm_sanction_period,
			        rmm.rmm_sanction_end_date,
			        rmm.rmm_admin,
			        ROW_NUMBER() OVER (PARTITION BY rmm.mbr_id ORDER BY rmm.rmm_num DESC) as rn
			    FROM report_member_management rmm
			    INNER JOIN `member` m ON rmm.mbr_id = m.mbr_id
			    WHERE m.mg_code = 'mg_003'
			)
			SELECT 
			    rmm_num,
			    rr_num,
			    mbr_id,
			    rc_code,
			    rmm_sanction_start_date,
			    rmm_sanction_period,
			    rmm_sanction_end_date,
			    rmm_admin
			FROM RankedRecords
			WHERE rn = 1
			AND rmm_sanction_end_date <![CDATA[ <= ]]> NOW()
			ORDER BY rmm_num DESC
				
  		</select>
  		
  		<!-- 제제기간 지난 멤버 회원등급 변경 -->
  		<update id="everydayCheck" parameterType="DeclareUser">
  			UPDATE
  				`member`
  			<set>
  				mg_code = 'mg_002'
  			</set>
  			WHERE
  				mbr_id = #{mbrId}
  		</update>
  </mapper>