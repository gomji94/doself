<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="doself.user.members.mapper.MembersMapper">
  
	<!-- 회원수정정보 1:1 -->  
    <resultMap type="Members" id="membersResultMap">
		<id 	column="mbr_id" 			         property="memberId"/>
		<result column="mbr_pw" 			         property="memberPw" />
		<result column="mbr_name" 			         property="memberName" />
		<result column="mbr_email"			         property="memberEmail" />
		<result column="mbr_birth_date" 	         property="memberBirth" />
		<result column="mbr_phone_num" 		         property="memberPhoneNum" />
		<result column="opening_ticket_count" 	   	 property="openTicketCnt" />
		<result column="participation_ticket_count"  property="partTicketCnt" />
		<result column="mbr_point" 	                 property="memberPoint" />
		<result column="mbr_file_idx" 	             property="profileFileIdx" />
		<result column="file_path" 	                 property="memberImage" />
	</resultMap>		
			<!-- 회원피드	1:N 
			<collection property="feedList" ofType="FeedList">
				<id 	column="feed_num"  		property="feedNum"/>
				<result column="feed_picture" 	property="feedImage"/>
			</collection> -->
	<!-- 티켓리스트 -->
	<resultMap type="TicketList" id="TicketListResultMap">
		<id 	column="mbr_id" 			         property="memberId"/>
		<result column="ctph_date" 			         property="ticketBuyDate" />
		<result column="ctc_category" 			     property="ticketName" />
		<result column="pmc_name" 			         property="ticketPaymentMethod" />
		<result column="ctm_date" 			         property="ticketUseChk" />
		<result column="ctm_return_status" 			 property="ticketReturnChk" />
		<result column="ticketUsedCnt" 			     property="ticketUsedCnt" />
		<result column="ticketNotUsedCnt" 			 property="ticketNotUsedCnt" />
	</resultMap>
	
	<!-- 포인트리스트 -->
	<resultMap type="PointList" id="PointListResultMap">
		<id 	column="mbr_id" 		    property="memberId"/>
		<result column="point_date"         property="pointTotalDate" />		
		<result column="point_detail" 	    property="pointDetail" />
		<result column="point_amount" 	    property="pointAmount" />
		<result column="point_usechk" 	    property="pointUseChk" />
	</resultMap>
	
	<!-- 피드리스트 -->
	<resultMap type="FeedList" id="FeedListResultMap">
		<id 	column="feed_num"  		property="feedNum"/>
		<result column="mbr_id" 	    property="memberId"/>
		<result column="feed_picture" 	property="feedImage"/>
	</resultMap> 
	
  	<!-- 회원수정정보 -->
    <select id="getMemberInfoById" parameterType="String" resultMap="membersResultMap">
		SELECT 
			m.mbr_id, 
			m.mbr_pw,
			m.mbr_name,
			m.mbr_email, 
			m.mbr_birth_date,
			m.mbr_phone_num,
			m.mbr_point,
			f.file_path 
		FROM 
		   member m INNER JOIN files f ON	
			m.mbr_file_idx = f.file_idx
		WHERE
		   mbr_id = #{memberId};
    </select>
    
    <!-- 회원 피드목록 조회 -->
    <select id="getMemberFeedListById" resultMap="FeedListResultMap">
		SELECT 
			f.feed_num,
			f.feed_picture,
			m.mbr_id
	    FROM 
	        member m INNER JOIN feed f USING(mbr_id)
	    WHERE
	        m.mbr_id = #{memberId};
    </select>
    
	<!-- 회원수정 -->
    <update id="modifyMember" parameterType="Members">
       UPDATE member 
        <trim prefix="SET" suffixOverrides=",">
            <if test="memberPw != null and memberPw !=''">
                mbr_pw=#{memberPw},
            </if>
            <if test="memberPhoneNum != null and memberPhoneNum != ''">
                mbr_phone_num=#{memberPhoneNum},
            </if>
            <if test="memberEmail != null and memberEmail != ''">
                mbr_email=#{memberEmail},
            </if>
            <if test="profileFileIdx != null and profileFileIdx != ''">
		  		mbr_file_idx=#{profileFileIdx}
     		</if>
        </trim>
        WHERE 
            mbr_id=#{memberId};
    </update>  
    
	<!-- 회원탈퇴 -->
	<update id="removeMemberById" parameterType="String">
		UPDATE member
		SET
			is_deleted = 'delete'
		WHERE
			mbr_id = #{memberId};
	</update>

    <!-- 회원 티켓내역 조회 -->
    <!-- /* <![CDATA[<= ]]> 꺽쇠 텍스트인식 */ -->
    <select id="getTicketListById" parameterType="map" resultMap="TicketListResultMap" >
		SELECT 
			ctph.mbr_id, 
			ctph.ctph_date, 
			ctc.ctc_category, 
			pmc.pmc_name, 
			ctm.ctm_date, 
			ctm.ctm_return_status,
			COUNT(ctm.ctm_date) OVER () AS ticketUsedCnt, 
			COUNT(*) OVER () - COUNT(ctm.ctm_date) OVER () AS ticketNotUsedCnt
		FROM 
		    challenge_ticket_payment_history ctph INNER JOIN challenge_ticket_price ctp
		    USING(ctp_code) INNER JOIN challenge_ticket_category ctc
		    USING(ctc_code) INNER JOIN ticket_payment_method tpm
		    USING(tpm_num) INNER JOIN payment_method_category pmc
		    USING(pmc_code) INNER JOIN challenge_ticket_management ctm
		    USING(ctph_num)
		WHERE 
			ctph.mbr_id = #{memberId}
			<if test="startDate != null">
			AND ctph.ctph_date >= #{startDate} 
			</if>
			<if test="endDate != null">
			AND ctph.ctph_date <![CDATA[ <= ]]> #{endDate} 
			</if>
		ORDER BY ctph_date DESC
		LIMIT #{rowPerPage}	OFFSET #{offset};
    </select>
    
    <!-- 회원 티켓이력 총 행의 갯수 -->
   	<select id="getCntTicketHistory" resultType="int">
   		SELECT
			COUNT(*)
		FROM
			challenge_ticket_payment_history
		where
			mbr_id = #{memberId}
			<if test="startDate != null">
			AND ctph_date >= #{startDate} 
			</if>
			<if test="endDate != null">
			AND ctph_date <![CDATA[ <= ]]> #{endDate} 
			</if>
   	</select>
   	
   	<!-- 회원 포인트내역 조회 -->
    <select id="getPointListById" parameterType="map" resultMap="PointListResultMap">
    	SELECT
    		rph.mbr_id AS mbr_id,
			rph.rph_reward_payment_date AS point_date,
			rh.rh_reward_type AS point_detail,
			rh.rh_point AS point_amount,
			'적립' AS point_usechk
			FROM
			reward_payment_history rph INNER JOIN	
			reward_history rh ON rh.rh_num = rph.rh_num
		WHERE
			mbr_id = #{memberId}
			<if test="startDate!= null">
			AND rph.rph_reward_payment_date >= #{startDate}
			</if>
			<if test="endDate!=null">
			AND rph.rph_reward_payment_date <![CDATA[ <= ]]> #{endDate}
			</if>
		UNION ALL	
		SELECT
			pumh.mbr_id AS mbr_id,
			pumh.pumh_date AS point_date,
			pepl.pepl_name AS point_detail,
			pepl.pepl_price AS point_amount,
			'사용' AS point_usechk
		FROM
			point_use_management_history pumh
		INNER JOIN	
			point_exchange_product_list pepl ON pepl.pepl_num = pumh.pepl_num
		WHERE
			mbr_id = #{memberId}
			<if test="startDate!= null">
			AND pumh.pumh_date >= #{startDate}
			</if>
			<if test="endDate!=null">
			AND pumh.pumh_date <![CDATA[ <= ]]> #{endDate}
			</if>
		ORDER BY point_date DESC
    	LIMIT #{rowPerPage}	OFFSET #{offset};
    </select>
       
    <!-- 회원 포인트이력 총 행의 갯수 -->
   	<select id="getCntPointHistory" resultType="int">
		WITH reward_point AS 
		(
			SELECT 
				rph.rph_num AS num
			FROM 
				reward_payment_history rph
			WHERE
				rph.mbr_id = #{memberId}
				<if test="startDate != null">	
				AND rph_reward_payment_date >= #{startDate}
				</if>
				<if test="endDate != null"> 
				AND rph_reward_payment_date <![CDATA[ <= ]]> #{endDate} 
				</if>
			UNION ALL 
			SELECT 
				pymh.pumh_num AS num
			FROM
				point_use_management_history pymh
			WHERE
				pymh.mbr_id = #{memberId}
				<if test="startDate != null">
				AND pymh.pumh_date >= #{startDate} 
				</if>
				<if test="endDate != null">
				AND pymh.pumh_date <![CDATA[ <= ]]> #{endDate}
				</if> 
		)
		SELECT COUNT(*) FROM reward_point;
   	</select>
   	
   	<select id="getMemebrTicketCntByIdandTicketCode" parameterType="Order" resultType="int">
	   	SELECT 
			<if test="ticketCode == 'ctc_001'">
				opening_ticket_count
			</if>
			<if test="ticketCode == 'ctc_002'">
				participation_ticket_count
			</if>
		FROM member
		WHERE mbr_id = #{ordererId}
   	</select>
   	
   	<update id="modifyMemberTicketCnt" parameterType="Order">
   		UPDATE member
		SET
			<if test="ticketCode == 'ctc_001'">
				opening_ticket_count=${updatedTicketCnt}
			</if>
			<if test="ticketCode == 'ctc_002'">
				participation_ticket_count=${updatedTicketCnt}
			</if>
			
		WHERE mbr_id = #{ordererId}
   	</update>
   	
   	
  </mapper>